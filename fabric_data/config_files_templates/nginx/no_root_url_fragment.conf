
    location = /${base_url_path} {
      rewrite ^ /${base_url_path_with_slash}index.php last;
    }

    location = /${base_url_path_with_slash} {
      index /${base_url_path_with_slash}index.php;
    }

    # Execute PHP code using php-fpm
    location ~ ^/${base_url_path_with_slash}(index\.php|asterisell_dev\.php)(/|$$) {
      ${maybe_authentication_conf}

      root    ${instance_directory}/web;
      rewrite ^${maybe_slash}${base_url_path}(/.*)$$ $$1 break;

      fastcgi_split_path_info ^(/index\.php|/asterisell_dev\.php)(/.*)$$;
      # parse the $$uri applying the regular expression.
      # after this:
      # - $$fastcgi_script_name is the first match $$1 (index.php or asterisell_dev.php)
      # - $$fastcgi_path_info is the second $$2 match (the options)

      fastcgi_param  REQUEST_METHOD     $$request_method;
      fastcgi_param  CONTENT_TYPE       $$content_type;
      fastcgi_param  CONTENT_LENGTH     $$content_length;

      fastcgi_param  SCRIPT_FILENAME   $$document_root$$fastcgi_script_name;
      fastcgi_param  SCRIPT_NAME /${base_url_path}$$fastcgi_script_name;
      fastcgi_param  QUERY_STRING $$query_string;
      fastcgi_param  PATH_INFO $$fastcgi_path_info;

      fastcgi_param  REQUEST_URI        $$request_uri;
      fastcgi_param  DOCUMENT_URI       $$document_uri;
      fastcgi_param  DOCUMENT_ROOT      $$document_root;

      ${fastcgi_param}

      fastcgi_param  SERVER_PROTOCOL    $$server_protocol;
      fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
      fastcgi_param  SERVER_SOFTWARE    nginx/$$nginx_version;
      fastcgi_param  REMOTE_ADDR        $$remote_addr;
      fastcgi_param  REMOTE_PORT        $$remote_port;
      fastcgi_param  SERVER_ADDR        $$server_addr;
      fastcgi_param  SERVER_PORT        $$server_port;
      fastcgi_param  SERVER_NAME        $$server_name;

      fastcgi_pass   127.0.0.1:9000;
    }

    # Serve static files
    location /${base_url_path_with_slash} {
      ${maybe_authentication_conf}

      root    ${instance_directory}/web;
      rewrite ^${maybe_slash}${base_url_path}(/.*)$$ $$1 break;

      # Use the cache on the client side, because static content rarely change,
      # but tell to the client to always ask if there is a new version to use.
      etag on;
      if_modified_since exact;
      expires 1;
      add_header Pragma public;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";

      try_files $$uri =404;
    }
